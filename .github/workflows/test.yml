# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs our tests on schedule and for each pull request and push.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'
  schedule:
    - cron:  '0 0 * * *'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@3a919529898de77ec3da873e3063ca4b10e7f5cc # v3.7.0
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.0.*'
          - '1.2.*'
          - '1.6.*'
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          WARPSTREAM_API_KEY: ${{ secrets.TF_ACCEPTANCE_TEST_API_KEY }}
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10

  finally:
    name: Finally
    needs: [test, generate]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Set Slack message
        run: |
          if [[ "${{ needs.test.result }}" == 'success' && "${{ needs.generate.result }}" == 'success' ]]; then
            echo "slack-message=\"SUCCESS LETS GO\"" >> $GITHUB_ENV
          else
            echo "slack-message=\"FAILED...\"" >> $GITHUB_ENV
          fi
      - name: Print slack message
        run: echo "${{ env.slack-message }} ${{ github.event_name }}"
      # - name: Post to a Slack channel
      #   uses: slackapi/slack-github-action@v2.0.0
      #   if: always() # TODO: if: ${{ github.event_name == 'schedule' }}
      #   with:
      #     method: chat.postMessage
      #     token: ${{ secrets.SLACK_BOT_TOKEN }}
      #     payload: |
      #       channel: ${{ secrets.SLACK_CHANNEL_ID }}
      #       text: ${{ env.slack-message }}
